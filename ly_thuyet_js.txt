1. cách để trèn js sự dụng thẻ <script></script> 
- chèn nội tuyến trong thẻ <head></head> hoặc phần cuối của thẻ <body></body>
- chèn ngoại tuyến bằng một file riêng .js và gắn liên kết ở cuối <body></body>

2. các hình thức xuất dữ liệu của js
- innerHTML : thay đổi một phần tự HTML - Sdung khi muốn hiện thị kết quả lên trang web
- document.write() : ghi trực tiếp nội dung vào trang web - thường sử dụng trong quá trình tải trang
- window.alert() : hiện thị một hộp thoại thông báo
- window.prompt() : hiện thị hộp thoại nhập liệu, yêu cầu người dùng nhập liệu
- console.log() : ghi thông tin vào bảng điều khiển của trình duyệt

3. các câu lệnh phổ biến trong js
- câu lệnh gán 
    let x = 10;
    let y = 5;
- câu lệnh điều kiện
    if (x > y) {
        console.log("x lớn hơn y);
    }else{
        console.log("x không lớn hơn y);
    }
- câu lệnh vòng lặp
    for(let i = 0; i < 5 ; i+=){
        console.log(i);
    }
- câu lệnh hàm
    function sayhello(){
        console.log("xin chao Viet Nam");
    }

    sayhell(); // gọi hàm
- câu lệnh trả về
    function sum(a, b){
        return a + b;
    }

    let result = sum(5, 10);
    console.log(result);

4. cú pháp trong JS
- biến : khai báo biến dùng var, let, hoặc const
- câu lệnh : câu lệch gán, câu lệnh điều kiện, câu lệnh vòng lặp (chi tiết xem mục 2)
- Hàm (functions) : khai báo hàm, gọi hàm ( chi tiết xem mục 2)
- Đối tượng, mảng :
    Đối tượng: 
    VD : let person = {
        firstName: "John",
        lastName: "Doe",
        age: 30
    };

    Mảng:
    VD : let fruits = ["Fruits", "Banana"]
- Toán tử số học
    let tong = 5 + 3; //8
    let hieu = 5 - 3; //2
    let tich = 5 * 3; //15
    let thuong = 5 / 2; // 2.5
    let du = 5 % 3; // 2
- Toán tử so sánh
    so sánh bằng (5 === 5)
    so sánh khác ( 5 !== 4)
    so sanh lớn, nhỏ (5 > 4), (4 < 5)
- Cú pháp chuỗi
    let greeting = "Hello, World!";
    let multiLine = `This is a multi-line string.`;

- Cú pháp dấu phẩy
    let person = {
        firstName: "John",
        lastName: "Doe",
        age: 30
    };
    let numbers = [1, 2, 3, 4, 5];

- Cú pháp chú thích
    // Đây là một chú thích đơn dòng

    /*
    Đây là một chú thích nhiều dòng
    Có thể kéo dài nhiều dòng
    */

- Cú pháp khối mã
    if (true) {
        console.log("Đây là một khối mã.");
    }

5. Biến trong JS
- biến trong JS có thể khai báo gồm 4 cách gồm : tự động, var, let, const
    ưu điểm:
    let và const có phạm vi khối, không thể khai báo lại, phải khai báo trước khi sử dụng, không ràng buộc với this, không được nâng lên
    
    nhược điểm:
    var  không cần phải khai báo, được nâng lên, liên kết với điều này

    Luôn khai báo const khi biết chắc giá trị. Sử dụng const khi bạn khai báo:
        Một mảng mới
        Một đối tượng mới 
        Một hàm mới
        Một RegExp mới

6. Toán tử JS
    có nhiều loại toán tử khác nhau:
    - Toán tử số học
    - Toán tử gán
    - Toán tử so sánh
    - Các toán tử chuỗi
    - Toán tử logic
    - Toán tử Bitwise
    - Toán tử ba ngôi
    - Toán tử loại

    
